basinquery.key1 = "insert into well_registry_db.basin  values(" + valueINT + "," + valueStr + ","+ description + ")" (WellRegistryQuries,38)
basinquery.key2 = "update well_registry_db.basin set basin_name='" + basinName + "'where basin_id  ="+ basinID + ""; (WellRegistryQuries,49)
basinquery.key3 =  "select basin_id, basin_name from well_registry_db.basin " (WellRegistryQuries,80)
basinquery.key4 =  "DELETE from well_registry_db.basin WHERE basin_id = " + basinID + " and  basin_name = '"+ basinName + "'" (WellRegistryQuries,61)
basinquery.key5 = "select count(*) from well_registry_db.basin where basin_name='" + basinName + "'"	(WellRegistryQuries,459)
wellquery.key1 = "insert into well_registry_db.wells  values("+wellID+",'"+wellName+"','"+location+"','"+apinumber+"',"
				+ ""+airgap+",'"+airGapUnit+"','"+company+"',"+waterDepth+",'"+waterDepthUnit+"',"+basinID+",'"+basinName+"',"
						+ "'"+country+"',"+elevation+",'"+elevationUnit+"','"+countryArea+"',"+waterDensity+","
								+ "'"+densityUnit+"','"+stateProvinence+"','"+timezone+"',"+latitude+","+longitude+","+description+")" (WellRegistryQuries,122)
	
wellquery.key2 = "update well_registry_db.wells set well_name = '" + wellName + "',location = '"+location+"',api_number = '"+apinumber+"',"
				+ "air_gap = "+airgap+",air_gap_unit = '"+airGapUnit+"',company = '"+company+"',water_depth = "+waterDepth+","
						+ "water_depth_unit = '"+waterDepthUnit+"',country = '"+country+"',gl_elevation = "+elevation+","
								+ "gl_elevation_unit = '"+elevationUnit+"',country_area = '"+countryArea+"',water_density = "+waterDensity+","
										+ "water_density_unit = '"+densityUnit+"',state_provinence = '"+stateProvinence+"',time_zone = '"+timezone+"',"
											+"	latitude = "+latitude+",longitude = "+longitude+" where  well_id = "+wellID+"  " (WellRegistryQuries,140)
wellquery.key3 = "update well_registry_db.wells set basin_name = '" +basinName+ "' where basin_id = "+basinID+"" (WellRegistryQuries,155)	
wellquery.key4 = "DELETE from well_registry_db.wells WHERE well_id = " + wellID + " and  well_name = '"
				+ wellName + "' and basin_id = "+basinID+" and basin_name = '"+basinName+"'"
wellquery.key5 = "DELETE from well_registry_db.wells WHERE basin_id = "+basinID+" and basin_name = '"+basinName+"'" (WellRegistryQuries,181)
wellquery.key6 =  "select* from well_registry_db.wells where basin_id="+basinid (WellRegistryQuries,217)
wellquery.key7 = "select count(*) from well_registry_db.wells where well_name='" + wellName + "' and basin_name = '"+basinName+"'" (WellRegistryQuries,479)
wellborequery.key1 = "insert into well_registry_db.wellbore  values("+basinID+",'"+basinName+"',"+wellID+",'"+wellName+"',"+wellboreID+",'"+wellboreName+"',"+ description + " )" (WellRegistryQuries,325)
wellborequery.key2 = "update well_registry_db.wellbore set wellbore_name='" + wellboreName + "'where wellbore_id = "+wellboreID+" and basin_id  =" 
				+ basinID + " and well_id = "+wellID+" and well_name = '"+wellName+"' and basin_name = '"+basinName+"' "	(WellRegistryQuries,337)
wellborequery.key3 = "update well_registry_db.wellbore set basin_name = '" +basinName+ "' where basin_id = "+basinID+""	(WellRegistryQuries,348)
wellborequery.key4 = "update well_registry_db.wellbore set well_name = '" +wellName+ "' where well_id = "+wellID+" (WellRegistryQuries,356)	
wellborequery.key5 =  "DELETE from well_registry_db.wellbore WHERE wellbore_id= "+wellboreID+"and wellbore_name = '"+wellboreName+"' and well_id = " + wellID + " and  well_name = '"
				+ wellName + "' and basin_id = "+basinID+" and basin_name = '"+basinName+"'"	(WellRegistryQuries,364)
wellborequery.key6 = "DELETE from well_registry_db.wellbore WHERE basin_id = "+basinID+" and basin_name = '"+basinName+"'" 	(WellRegistryQuries,382)
wellborequery.key7 = "select* from well_registry_db.wellbore where well_id="+wellID+" and basin_id = "+basinID+"" (WellRegistryQuries,402)	

wellborequery.key8 = "select count(*) from well_registry_db.wellbore where wellbore_name='" + wellboreName + "' and well_name ='"+wellName+"'and basin_name = '"+basin+"'"
wellborequery.key9 = "DELETE from well_registry_db.wellbore WHERE well_id = "+wellID+" and well_name = '"+wellName+"'" (WellRegistryQuries,199)
coredataquery.key1 = "select content from pb_core_data.core_data_image where depth ='" + depth + "'" (PB_Image_DB, 37)
coredataquery.key2 = "select depth from pb_core_data.core_data_image" (CoreDataView,179)
drillreportsquery.key1 = queryArr = {
				"select * from drilling_report_db.cuttings",
				"select * from drilling_report_db.gas",
				"select * from drilling_report_db.lot_fit",
				"select * from drilling_report_db.mw_drilling_depth",
				"select * from drilling_report_db.packoff",
				"select * from drilling_report_db.partial_losses",
				"select * from drilling_report_db.reaming",
				"select * from drilling_report_db.stuck_pipe",
				"select * from drilling_report_db.tight_hole",
				"select * from drilling_report_db.total_losses",
				};  (DrillReports_UI, 107)
dtsquery.key1 = "select * from dts_db.dts_fiber_length_112233" (DTSView, 163)
dtsquery.key2 = "select index, timestamp from dts_db.dts_data_112233" (DTSView, 164)
dtsquery.key3 =  query2 + " from dts_db.dts_data_112233 where index " + "between \"" + starttime.getValue().getIndex().toString()
					+ "\" and \"" + endtime.getValue().getIndex().toString() + "\" order by index" (DTSView,212)
gisquery.key1 = "select * from gis_db.hgl_pipelines_us" (GISView,312)
gisquery.key2 = "select * from gis_db.crudeoil_railterminals" (GISView,376)
gisquery.key3 = "select * from gis_db.bordercrossing_liquids_us" (GISView,440)
gisquery.key4 = "select * from gis_db.ethylene_crackers_us" (GISView,504)
gisquery.key5 = "select * from gis_db.lng_impexp_terminals_us" (GISView,567)
gisquery.key6 = "select * from gis_db.bordercrossing_electric_us" (GISView,629)
gisquery.key7 = "select * from gis_db.crudeoil_pipelines_us" (GISView,692)
gisquery.key8 =  "select * from gis_db.biodiesel_plants_us" (GISView,757)
gisquery.key9 = "select * from gis_db.coalmines_us" (GISView,820)
gisquery.key10 = "select * from gis_db.ethanol_plants_us" (GISView,883)
gisquery.key11 = "select * from gis_db.naturalgas_markethubs_us" (GISView,946)
gisquery.key12 =  "select * from gis_db.tight_shale_plays" (GISView,1010)
piplinequery.key1 = "select * from gis_db_1.petroleumproduct_pipelines_us_202001" (PipelineGIS, 263)
piplinequery.key2 = "select * from gis_db_1.hgl_pipelines_us_202001" (PipelineGIS, 282)
piplinequery.key3 = "select * from gis_db_1.crudeoil_railterminals_2017_2018"  (PipelineGIS, 301)
piplinequery.key4 = "select * from gis_db_1.ethylene_crackers_201803_v2"  (PipelineGIS, 320)
piplinequery.key5 = "select * from gis_db_1.lng_impexp_terminals_us_202004" (PipelineGIS, 338)
piplinequery.key6 =  "select * from gis_db_1.crudeoil_pipelines_us_202001" (PipelineGIS, 338)
piplinequery.key7 = "select * from gis_db_1.naturalgas_tradinghubs_us_202002" (PipelineGIS, 376)
piplinequery.key8 = "select * from gis_db_1.naturalgas_pipelines_us_202001" (PipelineGIS, 393)
piplinequery.key9 = "select * from gis_db_1.naturalgas_processingplants_us_2017_v2" (PipelineGIS, 412)
piplinequery.key10 =  "select * from gis_db_1.naturalgas_undergroundstorage_us_201812" (PipelineGIS, 430)
piplinequery.key11 =  "select * from gis_db_1.powerplants_us_202004" (PipelineGIS, 448)
piplinequery.key12   =  "select * from gis_db_1.petroleum_refineries_us_2020" (PipelineGIS, 465)
piplinequery.key13 = "select * from gis_db_1.petroleumproduct_terminals_us_202001" (PipelineGIS, 483)
piplinequery.key14 = "select * from gis_db_1.natural_gas_compressor_stations" (PipelineGIS, 501)
welllogsquery.key1 = "select distinct wellbore_id  from well_logs_db.well_logs_header" + " order by wellbore_id ASC" (WellLogsView, 303)
welllogsquery.key2 =  "select * from well_logs_db.well_logs_header where wellbore_id = " + wellboreName.getWellboreID()+ " order by mnemonic ASC" (WellLogsView, 459)
welllogsquery.key3 =  "select mnemonic from well_logs_db.well_logs_header WHERE unit_category = '"+unitcategory+"' and wellbore_id ="+wellLogSetting.getWellboreinfo().getWellboreID()+"" (WellLogsView, 544)
welllogsquery.key4 =  "select "+depth+"," + logNames + " from well_logs_db.well_logs_data_" + traceListData.get(2).getLogfileid() + " sort by "+depth+"" (WellLogsView, 555)
configquery.key1 =  "insert into well_registry_db.deviation_survey values("+wellboreid+" ,'"+deviationdatainfo+"')" (WellboreQueries, 33)
configquery.key2 = "select count(*) from well_registry_db.deviation_survey where wellbore_id=" + wellboreId + "" (WellboreQueries, 49)
configquery.key3 = "update well_registry_db.casing_tubing set casing_data='"+casingdatainfo+"set tubing_data="+tubingdatainfo+"'where wellbore_id="+ wellboreID + "" (WellboreQueries, 85)
configquery.key4 = "update well_registry_db.deviation_survey set deviation_data='" +deviationdatainfo  + "'where wellbore_id  ="   (WellboreQueries, 97)
				+ wellboreID + ""
configquery.key5 = "insert into well_registry_db.casing_tubing values("+wellboreid+" ,'"+casingdatainfo+"','"+tubingdatainfo+"')" (WellboreQueries, 109)
configquery.key6 = "select * from well_registry_db.ph_casing_reference_"+parameter  (WellboreQueries, 125)
configquery.key7 = "select casing_od from well_registry_db.ph_casing_reference_"+parameter (WellboreQueries, 169)
configquery.key8 = "select weight from well_registry_db.ph_casing_reference_"+parameter (WellboreQueries, 196)
configquery.key9 = "select casing_data from well_registry_db.casing_tubing where wellbore_id="+ wellboreid + "" (WellboreQueries, 224)
configquery.key10 = "select deviation_data from well_registry_db.deviation_survey where wellbore_id="+ wellboreid + "" (WellboreQueries, 254)
configquery.key11 = "select tubing_data from well_registry_db.casing_tubing where wellbore_id="+ wellboreid + "" (WellboreQueries, 284)
configquery.key12 =  "insert into well_registry_db.perforation values("+wellboreid+" ,'"+perforationdatainfo+"')" (WellboreQueries, 318)
configquery.key13 = "select perforation_data from well_registry_db.perforation where wellbore_id="+ wellboreid + "" (WellboreQueries, 326)
configquery.key14 = "update well_registry_db.perforation set perforation_data='" +perforationinfo + "'where wellbore_id  ="
				+ wellboreID + ""  (WellboreQueries, 360)
configquery.key15 = "insert into well_registry_db.well_completion values("+wellboreid+" ,'"+completiondatainfo+"')" (WellboreQueries, 372)
configquery.key16 = "select well_completion_data  from well_registry_db.well_completion where wellbore_id="+ wellboreid + "" (WellboreQueries, 380)
configquery.key17 = "update well_registry_db.well_completion set well_completion_data='" +completioninfo + "'where wellbore_id  ="
				+ wellboreID + ""  (WellboreQueries, 314)
configquery.key18 = "insert into well_registry_db.formation values("+wellboreid+" ,'"+formationdata+"')" (WellboreQueries, 426)
configquery.key19 = "select formation_data from well_registry_db.formation where wellbore_id="+ wellboreid + "" (WellboreQueries, 434)
configquery.key20 =  "update well_registry_db.formation set formation_data='" +formationinfo + "'where wellbore_id  ="
				+ wellboreID + ""  (WellboreQueries, 468)
projecttoptoolquery.key1 = "insert into projects_db.project_settings values("+valueStr+")" (ProjectQueries,41)
projecttoptoolquery.key2 = "update projects_db.project_settings set project_settings='" + projectSettings + "', last_modified_date='" + currentTime + "' where user_id='" + userId + "' and project_id='" + projectId + "'"  (ProjectQueries,63)
projecttoptoolquery.key3 =  "insert into projects_db.project_settings values("+valueStr+")" (ProjectQueries,65)
projecttoptoolquery.key4 =  "DELETE from projects_db.project_settings WHERE project_id = '" +projectId+ "' "  (ProjectQueries,82)
projecttoptoolquery.key5 = "select * from projects_db.project_settings where project_id='" + projectID + "' and user_name = '"+username+"'" (ProjectQueries,97)
projecttoptoolquery.key6 =  "select * from projects_db.project_settings where project_type = 'Petrahub' " (ProjectQueries,112)
projecttoptoolquery.key7 = "select project_id from projects_db.project_settings where user_id='" + UserId + "'" (ProjectQueries,126)
projecttoptoolquery.key8 = "select count(*) from projects_db.project_settings where project_name='" + projectName + "'"  (ProjectQueries,201)









																				